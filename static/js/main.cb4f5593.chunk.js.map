{"version":3,"sources":["components/Hero.js","components/Info.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","id","Info","props","handleInputChange","event","persist","setState","zip","target","value","handleSubmit","preventDefault","state","axios","get","then","res","city","data","name","country","sys","temp","main","feelsLikeTemp","feels_like","humidity","conditions","weather","description","catch","console","error","humidy","infoDisplay","this","Fragment","Form","Group","controlId","onSubmit","inline","FormControl","type","className","required","placeholder","onChange","Button","variant","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAgBeA,G,YAdF,WACX,OACE,qBAAKC,GAAG,YAAR,SACE,sBAAKA,GAAG,YAAR,UACE,gDACA,sBAAKA,GAAG,YAAR,UACE,0DACA,yE,wECwFKC,E,kDAxFb,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAcRC,kBAAoB,SAACC,GACnBA,EAAMC,UAEN,EAAKC,SAAS,CAAEC,IAAKH,EAAMI,OAAOC,SAlBhB,EAqBpBC,aAAe,SAACN,GAEdA,EAAMO,iBAFkB,IAGhBJ,EAAQ,EAAKK,MAAbL,IAERM,IAAMC,IAAN,UA7BW,8GA6BX,OAAsBP,IAGrBQ,MAAK,SAAAC,GAAG,OAAI,EAAKV,SAAS,CACzBC,IAAK,GACLU,KAAMD,EAAIE,KAAKC,KACfC,QAASJ,EAAIE,KAAKG,IAAID,QACtBE,KAAMN,EAAIE,KAAKK,KAAKD,KACpBE,cAAeR,EAAIE,KAAKK,KAAKE,WAC7BC,SAAUV,EAAIE,KAAKK,KAAKG,SACxBC,WAAYX,EAAIE,KAAKU,QAAQ,GAAGC,iBAEjCC,MAAMC,QAAQC,QAnCf,EAAKpB,MAAQ,CACXL,IAAK,GACLU,KAAM,KACNG,QAAS,KACTE,KAAM,KACNE,cAAe,KACfS,OAAQ,KACRN,WAAY,MAVI,E,qDA0ClB,IAAIO,EADG,EAG8DC,KAAKvB,MAAlEK,EAHD,EAGCA,KAAMG,EAHP,EAGOA,QAASE,EAHhB,EAGgBA,KAAME,EAHtB,EAGsBA,cAAeE,EAHrC,EAGqCA,SAAUC,EAH/C,EAG+CA,WAoBtD,OAbEO,EAJGjB,EAKD,eAAC,IAAMmB,SAAP,WACE,8BAAG,6CAAH,IAA2BnB,EAA3B,KAAmCG,KACnC,uBACA,8BAAG,gDAAH,IAA8BE,EAA9B,WAA6C,4CAAeE,EAAf,gBAC7C,uBACA,8BAAG,6CAAH,IAA2BE,EAA3B,OACA,uBACA,8BAAG,+CAAH,IAA6BC,QAXnB,GAiBd,cAAC,IAAMS,SAAP,UACE,eAACC,EAAA,EAAKC,MAAN,CAAYC,UAAU,MAAMvC,GAAG,YAA/B,UACE,eAACqC,EAAA,EAAD,CAAMG,SAAUL,KAAKzB,aAAc+B,QAAM,EAAzC,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,UAAU,UACVC,UAAQ,EACR1B,KAAK,MACLV,MAAO0B,KAAKvB,MAAML,IAClBuC,YAAY,iBACZC,SAAUZ,KAAKhC,oBAEjB,cAAC6C,EAAA,EAAD,CAAQJ,UAAU,aAAaD,KAAK,SAASM,QAAQ,kBAArD,4BAEF,8BACGf,a,GAjFMgB,aCOJC,MATf,WACE,OACE,sBAAKP,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QCEOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.cb4f5593.chunk.js","sourcesContent":["import React from 'react'\n\nconst Hero = () => {\n  return (\n    <div id=\"hero-side\">\n      <div id=\"hero-text\">\n        <h1>Weather Finder</h1>\n        <div id=\"subheader\">\n          <p>Find out the temperature,</p>\n          <p>weather conditions and more...</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Hero\n","import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\nimport axios from 'axios'\n\nconst apiUrl = 'https://api.openweathermap.org/data/2.5/weather?units=imperial&appid=9b706266b62ecb327121ca9708f8c096&zip='\n\nclass Info extends Component {\n  constructor (props) {\n    super(props)\n    // initialize all values to null or empty\n    this.state = {\n      zip: '',\n      city: null,\n      country: null,\n      temp: null,\n      feelsLikeTemp: null,\n      humidy: null,\n      conditions: null,\n    }\n  }\n\n  // take form input on button click\n  handleInputChange = (event) => {\n    event.persist()\n    // set input to the value of zip\n    this.setState({ zip: event.target.value })\n  }\n\n  handleSubmit = (event) => {\n    // prevent page refresh\n    event.preventDefault()\n    const { zip } = this.state\n    // make api call\n    axios.get(`${apiUrl}${zip}`)\n    // .then(res => console.log('This is res.data', res.data))\n    // pull all data from openweathermap api\n    .then(res => this.setState({\n      zip: '',\n      city: res.data.name,\n      country: res.data.sys.country,\n      temp: res.data.main.temp,\n      feelsLikeTemp: res.data.main.feels_like,\n      humidity: res.data.main.humidity,\n      conditions: res.data.weather[0].description\n    }))\n    .catch(console.error)\n  }\n\n  render() {\n    let infoDisplay\n    // deconstruct all necessary values from state\n    const { city, country, temp, feelsLikeTemp, humidity, conditions } = this.state\n\n    // if there's no input, keep info display blank\n    if (!city) {\n      infoDisplay = ''\n    } else {\n      // fill input display with content\n      infoDisplay =(\n        <React.Fragment>\n          <p><span>Location:</span> {city}, {country}</p>\n          <hr />\n          <p><span>Temperature:</span> {temp}&#x2109;, <i>feels like {feelsLikeTemp}&#x2109;.</i></p>\n          <hr />\n          <p><span>Humidity:</span> {humidity}%</p>\n          <hr />\n          <p><span>Conditions:</span> {conditions}</p>\n        </React.Fragment>\n      )\n    }\n\n    return (\n      <React.Fragment>\n        <Form.Group controlId=\"zip\" id=\"info-side\">\n          <Form onSubmit={this.handleSubmit} inline>\n            <FormControl\n              type=\"text\"\n              className=\"mr-sm-2\"\n              required\n              name=\"zip\"\n              value={this.state.zip}\n              placeholder=\"Enter Your Zip\"\n              onChange={this.handleInputChange}\n            />\n            <Button className='search-btn' type=\"submit\" variant=\"outline-primary\">Get Weather</Button>\n          </Form>\n          <div>\n            {infoDisplay}\n          </div>\n        </Form.Group>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Info\n","import React from 'react'\nimport './App.css'\n\nimport Hero from './components/Hero.js'\nimport Info from './components/Info.js'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <Hero/>\n        <Info/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}